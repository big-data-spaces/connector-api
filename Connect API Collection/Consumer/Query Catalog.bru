meta {
  name: Query Catalog
  type: http
  seq: 1
}

post {
  url: {{CONSUMER_MANAGEMENT_URL}}/v2/catalog/request
  body: json
  auth: apikey
}

auth:apikey {
  key: x-api-key
  value: ApiKeyDefaultValue
  placement: header
}

body:json {
  {
      "@context": {},
      "protocol": "dataspace-protocol-http",
      "counterPartyAddress": "{{PROVIDER_PROTOCOL_URL}}",
      "querySpec": {
          "offset": 0,
          "limit": 500,
          "filterExpression": []
      }
  }
}

tests {
  test("get offer id", function () {
      var jsonData = res.getBody();
      if(Array.isArray(jsonData["dcat:dataset"]))
      {
          bru.setVar("OFFER_ID", jsonData["dcat:dataset"][0]["odrl:hasPolicy"]["@id"]);
          bru.setVar("TARGET_ID", jsonData["dcat:dataset"][0]["odrl:hasPolicy"]["odrl:target"]);
          bru.setVar("PERMISSION",  JSON.stringify(jsonData["dcat:dataset"][0]["odrl:hasPolicy"]));
          bru.setVar("PROVIDER_ID", jsonData["edc:participantId"]);
      }
      else{
          bru.setVar("OFFER_ID", jsonData["dcat:dataset"]["odrl:hasPolicy"]["@id"]);
          bru.setVar("TARGET_ID", jsonData["dcat:dataset"]["odrl:hasPolicy"]["odrl:target"]);
          bru.setVar("PERMISSION",  JSON.stringify(jsonData["dcat:dataset"]["odrl:hasPolicy"]));
          bru.setVar("PROVIDER_ID", jsonData["edc:participantId"]);
      }
  
      console.log(bru.getVar("TARGET_ID"));
      console.log(bru.getVar("OFFER_ID"));
      console.log(bru.getVar("PROVIDER_ID"));
      console.log(bru.getVar("PERMISSION"));
  
      expect(bru.getVar("PROVIDER_ID")).not.eq(undefined);
      expect(bru.getVar("OFFER_ID")).not.eq(undefined);
      expect(bru.getVar("PERMISSION")).not.eq(undefined);
  
  });
  
  
}
